name: Deploy Crypto Web

on:
  push:
    branches:
      - main

jobs:
  prepare:
    name: Prepare release directory
    runs-on: [self-hosted]
    outputs:
      release: ${{ steps.set-release.outputs.release }}
    steps:
      - name: Generate and output release dir
        id: set-release
        run: |
          TIMESTAMP=$(date +"%Y%m%d%H%M%S")
          echo "RELEASE=$TIMESTAMP" >> $GITHUB_ENV
          echo "release=$TIMESTAMP" >> $GITHUB_OUTPUT
          mkdir -p "${{ secrets.DEPLOY_PATH }}/releases/$TIMESTAMP"

      - name: Clone repo
        run: |
          git clone --depth=1 --branch main https://github.com/${{ github.repository }} "${{ secrets.DEPLOY_PATH }}/releases/${{ needs.prepare.outputs.release }}"

      - name: Link shared files
        run: |
          ln -snf "${{ secrets.DEPLOY_PATH }}/shared/.env" "${{ secrets.DEPLOY_PATH }}/releases/${{ needs.prepare.outputs.release }}/.env"
          ln -snf "${{ secrets.DEPLOY_PATH }}/shared/storage" "${{ secrets.DEPLOY_PATH }}/releases/${{ needs.prepare.outputs.release }}/storage"

  composer:
    name: Install Composer dependencies
    needs: prepare
    runs-on: [self-hosted]
    steps:
      - name: Composer install
        run: |
          cd "${{ secrets.DEPLOY_PATH }}/releases/${{ needs.prepare.outputs.release }}" && composer install --no-dev --optimize-autoloader

  npm:
    name: Build frontend assets
    needs: composer
    runs-on: [self-hosted]
    steps:
      - name: NPM build
        run: |
          cd "${{ secrets.DEPLOY_PATH }}/releases/${{ needs.prepare.outputs.release }}" && /usr/bin/npm ci && /usr/bin/npm run build-only && rm -rf node_modules

  migrate:
    name: Run migrations and seed
    needs: npm
    runs-on: [self-hosted]
    steps:
      - name: Artisan migrate
        run: |
          cd "${{ secrets.DEPLOY_PATH }}/releases/${{ needs.prepare.outputs.release }}" && php artisan migrate --seed --force

  activate:
    name: Activate release & restart FPM
    needs: migrate
    runs-on: [self-hosted]
    steps:
      - name: Switch symlink and restart PHP
        run: |
          ln -sfn "${{ secrets.DEPLOY_PATH }}/releases/${{ needs.prepare.outputs.release }}" "${{ secrets.DEPLOY_PATH }}/current"
          sudo /usr/bin/systemctl restart php8.3-fpm

  cleanup:
    name: Cleanup old releases
    needs: activate
    runs-on: [self-hosted]
    steps:
      - name: Purge old releases (keep 3)
        run: |
          cd "${{ secrets.DEPLOY_PATH }}/releases"
          ls -1t | tail -n +4 | xargs -r rm -rf