name: Deploy Crypto Web

on:
  push:
    branches:
      - main

jobs:
  prepare:
    name: Prepare release directory
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Add server to known_hosts
        run: |
          ssh-keyscan -p ${{ secrets.DEPLOY_PORT }} -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Generate release dir
        run: |
          TIMESTAMP=$(date +"%Y%m%d%H%M%S")
          echo "RELEASE=$TIMESTAMP" >> $GITHUB_ENV
          ssh -p ${{ secrets.DEPLOY_PORT }} ${{ secrets.DEPLOY_HOST }} "mkdir -p ${{ secrets.DEPLOY_PATH }}/releases/$TIMESTAMP"

      - name: Clone repo
        run: |
          ssh -p ${{ secrets.DEPLOY_PORT }} ${{ secrets.DEPLOY_HOST }} "git clone --depth=1 --branch main https://github.com/${{ github.repository }} ${{ secrets.DEPLOY_PATH }}/releases/$RELEASE"

      - name: Link shared files
        run: |
          ssh -p ${{ secrets.DEPLOY_PORT }} ${{ secrets.DEPLOY_HOST }} "
            ln -snf ${{ secrets.DEPLOY_PATH }}/shared/.env ${{ secrets.DEPLOY_PATH }}/releases/$RELEASE/.env &&
            ln -snf ${{ secrets.DEPLOY_PATH }}/shared/storage ${{ secrets.DEPLOY_PATH }}/releases/$RELEASE/storage
          "

  composer:
    name: Install Composer dependencies
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Add server to known_hosts
        run: |
          ssh-keyscan -p ${{ secrets.DEPLOY_PORT }} -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Composer install
        run: |
          ssh -p ${{ secrets.DEPLOY_PORT }} ${{ secrets.DEPLOY_HOST }} "cd ${{ vars.DEPLOY_PATH }}/releases/$RELEASE && composer install --no-dev --optimize-autoloader"

  npm:
    name: Build frontend assets
    needs: composer
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Add server to known_hosts
        run: |
          ssh-keyscan -p ${{ secrets.DEPLOY_PORT }} -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: NPM build
        run: |
          ssh -p ${{ secrets.DEPLOY_PORT }} ${{ secrets.DEPLOY_HOST }} "cd ${{ vars.DEPLOY_PATH }}/releases/$RELEASE && /usr/bin/npm ci && /usr/bin/npm run build-only && rm -rf node_modules"

  migrate:
    name: Run migrations and seed
    needs: npm
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Add server to known_hosts
        run: |
          ssh-keyscan -p ${{ secrets.DEPLOY_PORT }} -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Artisan migrate
        run: |
          ssh -p ${{ secrets.DEPLOY_PORT }} ${{ secrets.DEPLOY_HOST }} "cd ${{ vars.DEPLOY_PATH }}/releases/$RELEASE && php artisan migrate --seed --force"

  activate:
    name: Activate release & restart FPM
    needs: migrate
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Add server to known_hosts
        run: |
          ssh-keyscan -p ${{ secrets.DEPLOY_PORT }} -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Switch symlink and restart PHP
        run: |
          ssh -p ${{ secrets.DEPLOY_PORT }} ${{ secrets.DEPLOY_HOST }} "
            ln -sfn ${{ vars.DEPLOY_PATH }}/releases/$RELEASE ${{ vars.DEPLOY_PATH }}/current &&
            sudo /usr/bin/systemctl restart php8.3-fpm
          "

  cleanup:
    name: Cleanup old releases
    needs: activate
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Add server to known_hosts
        run: |
          ssh-keyscan -p ${{ secrets.DEPLOY_PORT }} -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Purge old releases (keep 3)
        run: |
          ssh -p ${{ secrets.DEPLOY_PORT }} ${{ secrets.DEPLOY_HOST }} "
            cd ${{ vars.DEPLOY_PATH }}/releases &&
            ls -1t | tail -n +4 | xargs -r rm -rf
          "